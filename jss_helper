#!/usr/local/autopkg/python
# Copyright (C) 2014-2015 Shea G Craig <shea.craig@da.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


"""jss_helper

Query and manipulate objects on a JAMF Software Server.

Requires: python-jss.
usage: jss_helper [-h] [-v] [--ssl]  ...

Query the JSS.

optional arguments:
  -h, --help      show this help message and exit
  -v              Verbose output.
  --nossl         Do not use SSL verification

Actions:

    category      List all categories, or search for an individual
                  category.
    computer      List all computers, or search for an individual
                  computer.
    configp       List all configuration profiles, or search for an
                  individual configuration profile.
    excluded      List all policies and configuration profiles from
                  which a computer group is excluded.
    group         List all computer groups, or search for an individual
                  group.
    imaging_config
                  List all Casper Imaging computer configurations, or
                  search for an individual computer configuration.
    installs      Lists all policies and imaging configurations which
                  install a package.
    md            List all mobile devices, or search for an indvidual
                  mobile device.
    md_configp    List all mobile device configuration profiles, or
                  search for an individual mobile device configuration
                  profile.
    md_excluded   List all configuration profiles from which a mobile
                  device group is excluded.
    md_group      List all mobile device groups, or search for an
                  individual mobile device group.
    md_scope_diff
                  Show the differences between two mobile device groups'
                  scoped mobile device configuration profiles.
    md_scoped     List all mobile device configuration profiles scoped
                  to a mobile device group.
    package       List of all packages, or search for an individual
                  package.
    policy        List all policies, or search for an individual policy.
    scope_diff    Show the difference between two groups' scoped
                  policies and configuration profiles.
    scoped        List all policies and configuration profiles scoped to
                  a computer group.
    batch_scope   Scope a list of policies to a group.
    promote       Promote a package from development to production by
                  updating an existing production policy with a newer
                  package.
"""


from __future__ import absolute_import
from __future__ import print_function
import os
import sys

if os.path.isdir('/Library/AutoPkg/JSSImporter'):
    sys.path.insert(0, '/Library/AutoPkg/JSSImporter')
    import jss
else:
    raise Exception('python-jss is not installed!')

from jss_helper_lib import JSSConnection
from jss_helper_lib import actions
from jss_helper_lib import tools


__version__ = "2.2.0b2"


def main():
    """Run as a cli command."""
    python_jss_version = tools.version_check()

    print(("\n++ jss_helper: %s ++ "
          "python-jss: %s ++\n" % (__version__, python_jss_version)))
    actions.connect()

    parser = actions.build_argparser()
    args = parser.parse_args()

    try:
        func = args.func
    except AttributeError:
        parser.error("too few arguments")
    
    try:
        func(args)
    except KeyboardInterrupt:
        # User wishes to bail.
        sys.exit(1)


if __name__ == "__main__":
    main()
